"""
Django settings for designacoes project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from django.utils.translation import gettext_lazy as _
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

SECRET_KEY = os.environ.get('SECRET_KEY')
DEBUG = os.environ.get('DEBUG') == "True"

ALLOWED_HOSTS = ['192.168.1.200', '127.0.0.1', '144.22.183.205', 'caiopradog.com.br']

# Habilitar quando for https
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

FORCE_SCRIPT_NAME = os.environ.get("BASE_URL", '/')
USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
CSRF_COOKIE_PATH = LANGUAGE_COOKIE_PATH = SESSION_COOKIE_PATH = FORCE_SCRIPT_NAME

# Application definition

INSTALLED_APPS = [
    'assignments.apps.AssignmentsConfig',
    'configs.apps.ConfigsConfig',
    'volunteers.apps.VolunteersConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'tailwind',
    'theme',
    'django_browser_reload',
    'webpush',
    'pwa',
    'fontawesomefree'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_browser_reload.middleware.BrowserReloadMiddleware',
]

ROOT_URLCONF = 'designacoes.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'designacoes.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

USED_DATABASES = {
    'sqlite': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },
    'postgres': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('DB_NAME'),
        'USER': os.environ.get('DB_USER'),
        'PASSWORD': os.environ.get('DB_PASS'),
        'HOST': os.environ.get('DB_HOST'),
        'PORT': 5432,
    }
}

database = USED_DATABASES['postgres']
if DEBUG is True:
    database = USED_DATABASES['sqlite']

DATABASES = {
    'default': database
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

WEBPUSH_SETTINGS = {
   "VAPID_PUBLIC_KEY": os.environ.get('VAPID_PUBLIC_KEY'),
   "VAPID_PRIVATE_KEY": os.environ.get('VAPID_PRIVATE_KEY'),
   "VAPID_ADMIN_EMAIL": "caio.dopradogralho@gmail.com"
}


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'pt-BR'

LANGUAGES = [
    ('pt-BR', _('Brazilian Portuguese'),),
]

LOCALE_PATHS = (BASE_DIR / 'locale/',)

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = os.environ.get('STATIC_URL')
STATIC_ROOT = os.environ.get('STATIC_ROOT')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

INTERNAL_IPS = [
    '127.0.0.1',
]

TAILWIND_APP_NAME = 'theme'

PWA_APP_NAME = 'Designações'
PWA_APP_DESCRIPTION = "Ajudante de Designações"
PWA_APP_THEME_COLOR = '#5A98C8'
PWA_APP_BACKGROUND_COLOR = '#ffffff'
PWA_APP_DISPLAY = 'fullscreen'
PWA_APP_ORIENTATION = 'portrait'
PWA_APP_LANG = 'pt-BR'
PWA_APP_ICONS = [
    {
        'src': f'/{STATIC_URL}images/logo-160.png',
        'sizes': '160x160'
    },
    {
        'src': f'/{STATIC_URL}images/logo-192.png',
        'sizes': '192x192'
    },
    {
        'src': f'/{STATIC_URL}images/logo-512.png',
        'sizes': '512x512'
    }
]
